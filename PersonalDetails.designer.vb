'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="NavBiometric")>  _
Partial Public Class PersonalDetailsDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertempImage(instance As empImage)
    End Sub
  Partial Private Sub UpdateempImage(instance As empImage)
    End Sub
  Partial Private Sub DeleteempImage(instance As empImage)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("NavBiometricConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property empImages() As System.Data.Linq.Table(Of empImage)
		Get
			Return Me.GetTable(Of empImage)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.empImages")>  _
Partial Public Class empImage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _REGISTRATION_CODE As String
	
	Private _PIN As String
	
	Private _SIGNATURE_IMAGE As System.byte()
	
	Private _PICTURE_IMAGE As System.byte()
	
	Private _THUMBPRINT As System.byte()
	
	Private _THUMBPRINT1 As System.byte()
	
	Private _Rowversion As System.byte()
	
	Private _REGISTRATION_CODE_N As String
	
	Private _PIN_N As String
	
	Private _BRANCH_CODE As String
	
	Private _BRANCH_CODE_N As String
	
	Private _INVESTOR_ID As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnREGISTRATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREGISTRATION_CODEChanged()
    End Sub
    Partial Private Sub OnPINChanging(value As String)
    End Sub
    Partial Private Sub OnPINChanged()
    End Sub
    Partial Private Sub OnSIGNATURE_IMAGEChanging(value As System.byte())
    End Sub
    Partial Private Sub OnSIGNATURE_IMAGEChanged()
    End Sub
    Partial Private Sub OnPICTURE_IMAGEChanging(value As System.byte())
    End Sub
    Partial Private Sub OnPICTURE_IMAGEChanged()
    End Sub
    Partial Private Sub OnTHUMBPRINTChanging(value As System.byte())
    End Sub
    Partial Private Sub OnTHUMBPRINTChanged()
    End Sub
    Partial Private Sub OnTHUMBPRINT1Changing(value As System.byte())
    End Sub
    Partial Private Sub OnTHUMBPRINT1Changed()
    End Sub
    Partial Private Sub OnRowversionChanging(value As System.byte())
    End Sub
    Partial Private Sub OnRowversionChanged()
    End Sub
    Partial Private Sub OnREGISTRATION_CODE_NChanging(value As String)
    End Sub
    Partial Private Sub OnREGISTRATION_CODE_NChanged()
    End Sub
    Partial Private Sub OnPIN_NChanging(value As String)
    End Sub
    Partial Private Sub OnPIN_NChanged()
    End Sub
    Partial Private Sub OnBRANCH_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBRANCH_CODEChanged()
    End Sub
    Partial Private Sub OnBRANCH_CODE_NChanging(value As String)
    End Sub
    Partial Private Sub OnBRANCH_CODE_NChanged()
    End Sub
    Partial Private Sub OnINVESTOR_IDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnINVESTOR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGISTRATION_CODE", DbType:="VarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property REGISTRATION_CODE() As String
		Get
			Return Me._REGISTRATION_CODE
		End Get
		Set
			If (String.Equals(Me._REGISTRATION_CODE, value) = false) Then
				Me.OnREGISTRATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REGISTRATION_CODE = value
				Me.SendPropertyChanged("REGISTRATION_CODE")
				Me.OnREGISTRATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN", DbType:="VarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PIN() As String
		Get
			Return Me._PIN
		End Get
		Set
			If (String.Equals(Me._PIN, value) = false) Then
				Me.OnPINChanging(value)
				Me.SendPropertyChanging
				Me._PIN = value
				Me.SendPropertyChanged("PIN")
				Me.OnPINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGNATURE_IMAGE", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SIGNATURE_IMAGE() As System.byte()
		Get
			Return Me._SIGNATURE_IMAGE
		End Get
		Set
			If (Object.Equals(Me._SIGNATURE_IMAGE, value) = false) Then
				Me.OnSIGNATURE_IMAGEChanging(value)
				Me.SendPropertyChanging
				Me._SIGNATURE_IMAGE = value
				Me.SendPropertyChanged("SIGNATURE_IMAGE")
				Me.OnSIGNATURE_IMAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PICTURE_IMAGE", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PICTURE_IMAGE() As System.byte()
		Get
			Return Me._PICTURE_IMAGE
		End Get
		Set
			If (Object.Equals(Me._PICTURE_IMAGE, value) = false) Then
				Me.OnPICTURE_IMAGEChanging(value)
				Me.SendPropertyChanging
				Me._PICTURE_IMAGE = value
				Me.SendPropertyChanged("PICTURE_IMAGE")
				Me.OnPICTURE_IMAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THUMBPRINT", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property THUMBPRINT() As System.byte()
		Get
			Return Me._THUMBPRINT
		End Get
		Set
			If (Object.Equals(Me._THUMBPRINT, value) = false) Then
				Me.OnTHUMBPRINTChanging(value)
				Me.SendPropertyChanging
				Me._THUMBPRINT = value
				Me.SendPropertyChanged("THUMBPRINT")
				Me.OnTHUMBPRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THUMBPRINT1", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property THUMBPRINT1() As System.byte()
		Get
			Return Me._THUMBPRINT1
		End Get
		Set
			If (Object.Equals(Me._THUMBPRINT1, value) = false) Then
				Me.OnTHUMBPRINT1Changing(value)
				Me.SendPropertyChanging
				Me._THUMBPRINT1 = value
				Me.SendPropertyChanged("THUMBPRINT1")
				Me.OnTHUMBPRINT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rowversion", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Rowversion() As System.byte()
		Get
			Return Me._Rowversion
		End Get
		Set
			If (Object.Equals(Me._Rowversion, value) = false) Then
				Me.OnRowversionChanging(value)
				Me.SendPropertyChanging
				Me._Rowversion = value
				Me.SendPropertyChanged("Rowversion")
				Me.OnRowversionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGISTRATION_CODE_N", DbType:="NVarChar(20)", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property REGISTRATION_CODE_N() As String
		Get
			Return Me._REGISTRATION_CODE_N
		End Get
		Set
			If (String.Equals(Me._REGISTRATION_CODE_N, value) = false) Then
				Me.OnREGISTRATION_CODE_NChanging(value)
				Me.SendPropertyChanging
				Me._REGISTRATION_CODE_N = value
				Me.SendPropertyChanged("REGISTRATION_CODE_N")
				Me.OnREGISTRATION_CODE_NChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_N", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PIN_N() As String
		Get
			Return Me._PIN_N
		End Get
		Set
			If (String.Equals(Me._PIN_N, value) = false) Then
				Me.OnPIN_NChanging(value)
				Me.SendPropertyChanging
				Me._PIN_N = value
				Me.SendPropertyChanged("PIN_N")
				Me.OnPIN_NChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH_CODE", DbType:="VarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property BRANCH_CODE() As String
		Get
			Return Me._BRANCH_CODE
		End Get
		Set
			If (String.Equals(Me._BRANCH_CODE, value) = false) Then
				Me.OnBRANCH_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BRANCH_CODE = value
				Me.SendPropertyChanged("BRANCH_CODE")
				Me.OnBRANCH_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH_CODE_N", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property BRANCH_CODE_N() As String
		Get
			Return Me._BRANCH_CODE_N
		End Get
		Set
			If (String.Equals(Me._BRANCH_CODE_N, value) = false) Then
				Me.OnBRANCH_CODE_NChanging(value)
				Me.SendPropertyChanging
				Me._BRANCH_CODE_N = value
				Me.SendPropertyChanged("BRANCH_CODE_N")
				Me.OnBRANCH_CODE_NChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INVESTOR_ID", DbType:="Decimal(20,0)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INVESTOR_ID() As System.Nullable(Of Decimal)
		Get
			Return Me._INVESTOR_ID
		End Get
		Set
			If (Me._INVESTOR_ID.Equals(value) = false) Then
				Me.OnINVESTOR_IDChanging(value)
				Me.SendPropertyChanging
				Me._INVESTOR_ID = value
				Me.SendPropertyChanged("INVESTOR_ID")
				Me.OnINVESTOR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
