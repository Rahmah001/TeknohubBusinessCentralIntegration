'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="RECONDB")>  _
Partial Public Class reconlinesclassDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertRecon_Engine_Line(instance As Recon_Engine_Line)
    End Sub
  Partial Private Sub UpdateRecon_Engine_Line(instance As Recon_Engine_Line)
    End Sub
  Partial Private Sub DeleteRecon_Engine_Line(instance As Recon_Engine_Line)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("RECONDBConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Recon_Engine_Lines() As System.Data.Linq.Table(Of Recon_Engine_Line)
		Get
			Return Me.GetTable(Of Recon_Engine_Line)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Recon Engine Lines]")>  _
Partial Public Class Recon_Engine_Line
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _No As String
	
	Private _Line_No As Integer
	
	Private _PIN As String
	
	Private _Employer_No As String
	
	Private _Employee_Name As String
	
	Private _Employee_Contribution As Decimal
	
	Private _Employer_Contribution As Decimal
	
	Private _Employee_AVC As Decimal
	
	Private _Employer_AVC As Decimal
	
	Private _Interest_Penalty As Decimal
	
	Private _Total_Contribution As Decimal
	
	Private _Suggested_Employee_Name As String
	
	Private _EE_ACCUMULATED As Decimal
	
	Private _ER_ACCUMULATED As Decimal
	
	Private _ER_LEGACY As Decimal
	
	Private _EE_LEGACY As Decimal
	
	Private _Status As Integer
	
	Private _Apply_Suggestions As Byte
	
	Private _Accepted_Name As String
	
	Private _Date_of_Update As Date
	
	Private _Time_of_Update As Date
	
	Private _Accepted_By As String
	
	Private _Not_on_NAV_DB As Byte
	
	Private _Duplicate_Record As Byte
	
	Private _timestamp As System.Data.Linq.Binary
	
	Private _Period As System.Nullable(Of Date)
	
	Private _PREVIOUS_AMOUNT As System.Nullable(Of Decimal)
	
	Private _Wrong_Period As System.Nullable(Of Byte)
	
	Private _Staff_ID As String
	
	Private _ScheduleID As String
	
	Private _Cash_ID As String
	
	Private _CTS_ID As String
	
	Private _Blocked_PIN As System.Nullable(Of Byte)
	
	Private _ScheduleMonitorID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNoChanging(value As String)
    End Sub
    Partial Private Sub OnNoChanged()
    End Sub
    Partial Private Sub OnLine_NoChanging(value As Integer)
    End Sub
    Partial Private Sub OnLine_NoChanged()
    End Sub
    Partial Private Sub OnPINChanging(value As String)
    End Sub
    Partial Private Sub OnPINChanged()
    End Sub
    Partial Private Sub OnEmployer_NoChanging(value As String)
    End Sub
    Partial Private Sub OnEmployer_NoChanged()
    End Sub
    Partial Private Sub OnEmployee_NameChanging(value As String)
    End Sub
    Partial Private Sub OnEmployee_NameChanged()
    End Sub
    Partial Private Sub OnEmployee_ContributionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEmployee_ContributionChanged()
    End Sub
    Partial Private Sub OnEmployer_ContributionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEmployer_ContributionChanged()
    End Sub
    Partial Private Sub OnEmployee_AVCChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEmployee_AVCChanged()
    End Sub
    Partial Private Sub OnEmployer_AVCChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEmployer_AVCChanged()
    End Sub
    Partial Private Sub OnInterest_PenaltyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnInterest_PenaltyChanged()
    End Sub
    Partial Private Sub OnTotal_ContributionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotal_ContributionChanged()
    End Sub
    Partial Private Sub OnSuggested_Employee_NameChanging(value As String)
    End Sub
    Partial Private Sub OnSuggested_Employee_NameChanged()
    End Sub
    Partial Private Sub OnEE_ACCUMULATEDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEE_ACCUMULATEDChanged()
    End Sub
    Partial Private Sub OnER_ACCUMULATEDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnER_ACCUMULATEDChanged()
    End Sub
    Partial Private Sub OnER_LEGACYChanging(value As Decimal)
    End Sub
    Partial Private Sub OnER_LEGACYChanged()
    End Sub
    Partial Private Sub OnEE_LEGACYChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEE_LEGACYChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnApply_SuggestionsChanging(value As Byte)
    End Sub
    Partial Private Sub OnApply_SuggestionsChanged()
    End Sub
    Partial Private Sub OnAccepted_NameChanging(value As String)
    End Sub
    Partial Private Sub OnAccepted_NameChanged()
    End Sub
    Partial Private Sub OnDate_of_UpdateChanging(value As Date)
    End Sub
    Partial Private Sub OnDate_of_UpdateChanged()
    End Sub
    Partial Private Sub OnTime_of_UpdateChanging(value As Date)
    End Sub
    Partial Private Sub OnTime_of_UpdateChanged()
    End Sub
    Partial Private Sub OnAccepted_ByChanging(value As String)
    End Sub
    Partial Private Sub OnAccepted_ByChanged()
    End Sub
    Partial Private Sub OnNot_on_NAV_DBChanging(value As Byte)
    End Sub
    Partial Private Sub OnNot_on_NAV_DBChanged()
    End Sub
    Partial Private Sub OnDuplicate_RecordChanging(value As Byte)
    End Sub
    Partial Private Sub OnDuplicate_RecordChanged()
    End Sub
    Partial Private Sub OntimestampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OntimestampChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnPREVIOUS_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPREVIOUS_AMOUNTChanged()
    End Sub
    Partial Private Sub OnWrong_PeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnWrong_PeriodChanged()
    End Sub
    Partial Private Sub OnStaff_IDChanging(value As String)
    End Sub
    Partial Private Sub OnStaff_IDChanged()
    End Sub
    Partial Private Sub OnScheduleIDChanging(value As String)
    End Sub
    Partial Private Sub OnScheduleIDChanged()
    End Sub
    Partial Private Sub OnCash_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCash_IDChanged()
    End Sub
    Partial Private Sub OnCTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCTS_IDChanged()
    End Sub
    Partial Private Sub OnBlocked_PINChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnBlocked_PINChanged()
    End Sub
    Partial Private Sub OnScheduleMonitorIDChanging(value As String)
    End Sub
    Partial Private Sub OnScheduleMonitorIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property No() As String
		Get
			Return Me._No
		End Get
		Set
			If (String.Equals(Me._No, value) = false) Then
				Me.OnNoChanging(value)
				Me.SendPropertyChanging
				Me._No = value
				Me.SendPropertyChanged("No")
				Me.OnNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Line No]", Storage:="_Line_No", DbType:="Int NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Line_No() As Integer
		Get
			Return Me._Line_No
		End Get
		Set
			If ((Me._Line_No = value)  _
						= false) Then
				Me.OnLine_NoChanging(value)
				Me.SendPropertyChanging
				Me._Line_No = value
				Me.SendPropertyChanged("Line_No")
				Me.OnLine_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PIN() As String
		Get
			Return Me._PIN
		End Get
		Set
			If (String.Equals(Me._PIN, value) = false) Then
				Me.OnPINChanging(value)
				Me.SendPropertyChanging
				Me._PIN = value
				Me.SendPropertyChanged("PIN")
				Me.OnPINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employer No]", Storage:="_Employer_No", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employer_No() As String
		Get
			Return Me._Employer_No
		End Get
		Set
			If (String.Equals(Me._Employer_No, value) = false) Then
				Me.OnEmployer_NoChanging(value)
				Me.SendPropertyChanging
				Me._Employer_No = value
				Me.SendPropertyChanged("Employer_No")
				Me.OnEmployer_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employee Name]", Storage:="_Employee_Name", DbType:="NVarChar(250) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employee_Name() As String
		Get
			Return Me._Employee_Name
		End Get
		Set
			If (String.Equals(Me._Employee_Name, value) = false) Then
				Me.OnEmployee_NameChanging(value)
				Me.SendPropertyChanging
				Me._Employee_Name = value
				Me.SendPropertyChanged("Employee_Name")
				Me.OnEmployee_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employee Contribution]", Storage:="_Employee_Contribution", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employee_Contribution() As Decimal
		Get
			Return Me._Employee_Contribution
		End Get
		Set
			If ((Me._Employee_Contribution = value)  _
						= false) Then
				Me.OnEmployee_ContributionChanging(value)
				Me.SendPropertyChanging
				Me._Employee_Contribution = value
				Me.SendPropertyChanged("Employee_Contribution")
				Me.OnEmployee_ContributionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employer Contribution]", Storage:="_Employer_Contribution", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employer_Contribution() As Decimal
		Get
			Return Me._Employer_Contribution
		End Get
		Set
			If ((Me._Employer_Contribution = value)  _
						= false) Then
				Me.OnEmployer_ContributionChanging(value)
				Me.SendPropertyChanging
				Me._Employer_Contribution = value
				Me.SendPropertyChanged("Employer_Contribution")
				Me.OnEmployer_ContributionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employee AVC]", Storage:="_Employee_AVC", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employee_AVC() As Decimal
		Get
			Return Me._Employee_AVC
		End Get
		Set
			If ((Me._Employee_AVC = value)  _
						= false) Then
				Me.OnEmployee_AVCChanging(value)
				Me.SendPropertyChanging
				Me._Employee_AVC = value
				Me.SendPropertyChanged("Employee_AVC")
				Me.OnEmployee_AVCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employer AVC]", Storage:="_Employer_AVC", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employer_AVC() As Decimal
		Get
			Return Me._Employer_AVC
		End Get
		Set
			If ((Me._Employer_AVC = value)  _
						= false) Then
				Me.OnEmployer_AVCChanging(value)
				Me.SendPropertyChanging
				Me._Employer_AVC = value
				Me.SendPropertyChanged("Employer_AVC")
				Me.OnEmployer_AVCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Interest Penalty]", Storage:="_Interest_Penalty", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Interest_Penalty() As Decimal
		Get
			Return Me._Interest_Penalty
		End Get
		Set
			If ((Me._Interest_Penalty = value)  _
						= false) Then
				Me.OnInterest_PenaltyChanging(value)
				Me.SendPropertyChanging
				Me._Interest_Penalty = value
				Me.SendPropertyChanged("Interest_Penalty")
				Me.OnInterest_PenaltyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Total Contribution]", Storage:="_Total_Contribution", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Total_Contribution() As Decimal
		Get
			Return Me._Total_Contribution
		End Get
		Set
			If ((Me._Total_Contribution = value)  _
						= false) Then
				Me.OnTotal_ContributionChanging(value)
				Me.SendPropertyChanging
				Me._Total_Contribution = value
				Me.SendPropertyChanged("Total_Contribution")
				Me.OnTotal_ContributionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Suggested Employee Name]", Storage:="_Suggested_Employee_Name", DbType:="NVarChar(250) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Suggested_Employee_Name() As String
		Get
			Return Me._Suggested_Employee_Name
		End Get
		Set
			If (String.Equals(Me._Suggested_Employee_Name, value) = false) Then
				Me.OnSuggested_Employee_NameChanging(value)
				Me.SendPropertyChanging
				Me._Suggested_Employee_Name = value
				Me.SendPropertyChanged("Suggested_Employee_Name")
				Me.OnSuggested_Employee_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[EE ACCUMULATED]", Storage:="_EE_ACCUMULATED", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EE_ACCUMULATED() As Decimal
		Get
			Return Me._EE_ACCUMULATED
		End Get
		Set
			If ((Me._EE_ACCUMULATED = value)  _
						= false) Then
				Me.OnEE_ACCUMULATEDChanging(value)
				Me.SendPropertyChanging
				Me._EE_ACCUMULATED = value
				Me.SendPropertyChanged("EE_ACCUMULATED")
				Me.OnEE_ACCUMULATEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[ER ACCUMULATED]", Storage:="_ER_ACCUMULATED", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ER_ACCUMULATED() As Decimal
		Get
			Return Me._ER_ACCUMULATED
		End Get
		Set
			If ((Me._ER_ACCUMULATED = value)  _
						= false) Then
				Me.OnER_ACCUMULATEDChanging(value)
				Me.SendPropertyChanging
				Me._ER_ACCUMULATED = value
				Me.SendPropertyChanged("ER_ACCUMULATED")
				Me.OnER_ACCUMULATEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[ER LEGACY]", Storage:="_ER_LEGACY", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ER_LEGACY() As Decimal
		Get
			Return Me._ER_LEGACY
		End Get
		Set
			If ((Me._ER_LEGACY = value)  _
						= false) Then
				Me.OnER_LEGACYChanging(value)
				Me.SendPropertyChanging
				Me._ER_LEGACY = value
				Me.SendPropertyChanged("ER_LEGACY")
				Me.OnER_LEGACYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[EE LEGACY]", Storage:="_EE_LEGACY", DbType:="Decimal(38,20) NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EE_LEGACY() As Decimal
		Get
			Return Me._EE_LEGACY
		End Get
		Set
			If ((Me._EE_LEGACY = value)  _
						= false) Then
				Me.OnEE_LEGACYChanging(value)
				Me.SendPropertyChanging
				Me._EE_LEGACY = value
				Me.SendPropertyChanged("EE_LEGACY")
				Me.OnEE_LEGACYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Apply Suggestions]", Storage:="_Apply_Suggestions", DbType:="TinyInt NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Apply_Suggestions() As Byte
		Get
			Return Me._Apply_Suggestions
		End Get
		Set
			If ((Me._Apply_Suggestions = value)  _
						= false) Then
				Me.OnApply_SuggestionsChanging(value)
				Me.SendPropertyChanging
				Me._Apply_Suggestions = value
				Me.SendPropertyChanged("Apply_Suggestions")
				Me.OnApply_SuggestionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Accepted Name]", Storage:="_Accepted_Name", DbType:="NVarChar(150) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Accepted_Name() As String
		Get
			Return Me._Accepted_Name
		End Get
		Set
			If (String.Equals(Me._Accepted_Name, value) = false) Then
				Me.OnAccepted_NameChanging(value)
				Me.SendPropertyChanging
				Me._Accepted_Name = value
				Me.SendPropertyChanged("Accepted_Name")
				Me.OnAccepted_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Date of Update]", Storage:="_Date_of_Update", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Date_of_Update() As Date
		Get
			Return Me._Date_of_Update
		End Get
		Set
			If ((Me._Date_of_Update = value)  _
						= false) Then
				Me.OnDate_of_UpdateChanging(value)
				Me.SendPropertyChanging
				Me._Date_of_Update = value
				Me.SendPropertyChanged("Date_of_Update")
				Me.OnDate_of_UpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Time of Update]", Storage:="_Time_of_Update", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Time_of_Update() As Date
		Get
			Return Me._Time_of_Update
		End Get
		Set
			If ((Me._Time_of_Update = value)  _
						= false) Then
				Me.OnTime_of_UpdateChanging(value)
				Me.SendPropertyChanging
				Me._Time_of_Update = value
				Me.SendPropertyChanged("Time_of_Update")
				Me.OnTime_of_UpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Accepted By]", Storage:="_Accepted_By", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Accepted_By() As String
		Get
			Return Me._Accepted_By
		End Get
		Set
			If (String.Equals(Me._Accepted_By, value) = false) Then
				Me.OnAccepted_ByChanging(value)
				Me.SendPropertyChanging
				Me._Accepted_By = value
				Me.SendPropertyChanged("Accepted_By")
				Me.OnAccepted_ByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Not on NAV DB]", Storage:="_Not_on_NAV_DB", DbType:="TinyInt NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Not_on_NAV_DB() As Byte
		Get
			Return Me._Not_on_NAV_DB
		End Get
		Set
			If ((Me._Not_on_NAV_DB = value)  _
						= false) Then
				Me.OnNot_on_NAV_DBChanging(value)
				Me.SendPropertyChanging
				Me._Not_on_NAV_DB = value
				Me.SendPropertyChanged("Not_on_NAV_DB")
				Me.OnNot_on_NAV_DBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Duplicate Record]", Storage:="_Duplicate_Record", DbType:="TinyInt NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Duplicate_Record() As Byte
		Get
			Return Me._Duplicate_Record
		End Get
		Set
			If ((Me._Duplicate_Record = value)  _
						= false) Then
				Me.OnDuplicate_RecordChanging(value)
				Me.SendPropertyChanging
				Me._Duplicate_Record = value
				Me.SendPropertyChanged("Duplicate_Record")
				Me.OnDuplicate_RecordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_timestamp", AutoSync:=AutoSync.Always, DbType:="rowversion", IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property timestamp() As System.Data.Linq.Binary
		Get
			Return Me._timestamp
		End Get
		Set
			If (Object.Equals(Me._timestamp, value) = false) Then
				Me.OntimestampChanging(value)
				Me.SendPropertyChanging
				Me._timestamp = value
				Me.SendPropertyChanged("timestamp")
				Me.OntimestampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Period() As System.Nullable(Of Date)
		Get
			Return Me._Period
		End Get
		Set
			If (Me._Period.Equals(value) = false) Then
				Me.OnPeriodChanging(value)
				Me.SendPropertyChanging
				Me._Period = value
				Me.SendPropertyChanged("Period")
				Me.OnPeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[PREVIOUS AMOUNT]", Storage:="_PREVIOUS_AMOUNT", DbType:="Decimal(38,20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PREVIOUS_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._PREVIOUS_AMOUNT
		End Get
		Set
			If (Me._PREVIOUS_AMOUNT.Equals(value) = false) Then
				Me.OnPREVIOUS_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._PREVIOUS_AMOUNT = value
				Me.SendPropertyChanged("PREVIOUS_AMOUNT")
				Me.OnPREVIOUS_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Wrong Period]", Storage:="_Wrong_Period", DbType:="TinyInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Wrong_Period() As System.Nullable(Of Byte)
		Get
			Return Me._Wrong_Period
		End Get
		Set
			If (Me._Wrong_Period.Equals(value) = false) Then
				Me.OnWrong_PeriodChanging(value)
				Me.SendPropertyChanging
				Me._Wrong_Period = value
				Me.SendPropertyChanged("Wrong_Period")
				Me.OnWrong_PeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Staff ID]", Storage:="_Staff_ID", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Staff_ID() As String
		Get
			Return Me._Staff_ID
		End Get
		Set
			If (String.Equals(Me._Staff_ID, value) = false) Then
				Me.OnStaff_IDChanging(value)
				Me.SendPropertyChanging
				Me._Staff_ID = value
				Me.SendPropertyChanged("Staff_ID")
				Me.OnStaff_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScheduleID", DbType:="NVarChar(40)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ScheduleID() As String
		Get
			Return Me._ScheduleID
		End Get
		Set
			If (String.Equals(Me._ScheduleID, value) = false) Then
				Me.OnScheduleIDChanging(value)
				Me.SendPropertyChanging
				Me._ScheduleID = value
				Me.SendPropertyChanged("ScheduleID")
				Me.OnScheduleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Cash ID]", Storage:="_Cash_ID", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cash_ID() As String
		Get
			Return Me._Cash_ID
		End Get
		Set
			If (String.Equals(Me._Cash_ID, value) = false) Then
				Me.OnCash_IDChanging(value)
				Me.SendPropertyChanging
				Me._Cash_ID = value
				Me.SendPropertyChanged("Cash_ID")
				Me.OnCash_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[CTS ID]", Storage:="_CTS_ID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CTS_ID() As String
		Get
			Return Me._CTS_ID
		End Get
		Set
			If (String.Equals(Me._CTS_ID, value) = false) Then
				Me.OnCTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CTS_ID = value
				Me.SendPropertyChanged("CTS_ID")
				Me.OnCTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Blocked PIN]", Storage:="_Blocked_PIN", DbType:="TinyInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Blocked_PIN() As System.Nullable(Of Byte)
		Get
			Return Me._Blocked_PIN
		End Get
		Set
			If (Me._Blocked_PIN.Equals(value) = false) Then
				Me.OnBlocked_PINChanging(value)
				Me.SendPropertyChanging
				Me._Blocked_PIN = value
				Me.SendPropertyChanged("Blocked_PIN")
				Me.OnBlocked_PINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScheduleMonitorID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ScheduleMonitorID() As String
		Get
			Return Me._ScheduleMonitorID
		End Get
		Set
			If (String.Equals(Me._ScheduleMonitorID, value) = false) Then
				Me.OnScheduleMonitorIDChanging(value)
				Me.SendPropertyChanging
				Me._ScheduleMonitorID = value
				Me.SendPropertyChanged("ScheduleMonitorID")
				Me.OnScheduleMonitorIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
