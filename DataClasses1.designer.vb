'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AIICO")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAIICO_FUND_ACCOUNTS_Reconciliation_Engine(instance As AIICO_FUND_ACCOUNTS_Reconciliation_Engine)
    End Sub
  Partial Private Sub UpdateAIICO_FUND_ACCOUNTS_Reconciliation_Engine(instance As AIICO_FUND_ACCOUNTS_Reconciliation_Engine)
    End Sub
  Partial Private Sub DeleteAIICO_FUND_ACCOUNTS_Reconciliation_Engine(instance As AIICO_FUND_ACCOUNTS_Reconciliation_Engine)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AIICOConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AIICO_FUND_ACCOUNTS_Reconciliation_Engines() As System.Data.Linq.Table(Of AIICO_FUND_ACCOUNTS_Reconciliation_Engine)
		Get
			Return Me.GetTable(Of AIICO_FUND_ACCOUNTS_Reconciliation_Engine)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[AIICO FUND ACCOUNTS$Reconciliation Engine]")>  _
Partial Public Class AIICO_FUND_ACCOUNTS_Reconciliation_Engine
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _timestamp As System.Data.Linq.Binary
	
	Private _No As String
	
	Private _Employer_Code As String
	
	Private _Employer_Name As String
	
	Private _Contribution_Period As Date
	
	Private _Period_Narration As String
	
	Private _Description As String
	
	Private _Type_of_Remittance As Integer
	
	Private _User_ID As String
	
	Private _Status As Integer
	
	Private _Schedule_Downloaded As Byte
	
	Private _Downloaded_By As String
	
	Private _No_Series As String
	
	Private _Date As Date
	
	Private _Fund As String
	
	Private _Source As String
	
	Private _Sub_Type As String
	
	Private _CP_Header_No As String
	
	Private _Reconciliation_DB As Integer
	
	Private _Value_Date As Date
	
	Private _Schedule_ID As String
	
	Private _Contribution_Type As Integer
	
	Private _Fund_Type As Integer
	
	Private _Select As Byte
	
	Private _Selected_by As String
	
	Private _Schedule_Monitor_No As String
	
	Private _Archive As Byte
	
	Private _Datetime_Archive As Date
	
	Private _Archived_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntimestampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OntimestampChanged()
    End Sub
    Partial Private Sub OnNoChanging(value As String)
    End Sub
    Partial Private Sub OnNoChanged()
    End Sub
    Partial Private Sub OnEmployer_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnEmployer_CodeChanged()
    End Sub
    Partial Private Sub OnEmployer_NameChanging(value As String)
    End Sub
    Partial Private Sub OnEmployer_NameChanged()
    End Sub
    Partial Private Sub OnContribution_PeriodChanging(value As Date)
    End Sub
    Partial Private Sub OnContribution_PeriodChanged()
    End Sub
    Partial Private Sub OnPeriod_NarrationChanging(value As String)
    End Sub
    Partial Private Sub OnPeriod_NarrationChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnType_of_RemittanceChanging(value As Integer)
    End Sub
    Partial Private Sub OnType_of_RemittanceChanged()
    End Sub
    Partial Private Sub OnUser_IDChanging(value As String)
    End Sub
    Partial Private Sub OnUser_IDChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnSchedule_DownloadedChanging(value As Byte)
    End Sub
    Partial Private Sub OnSchedule_DownloadedChanged()
    End Sub
    Partial Private Sub OnDownloaded_ByChanging(value As String)
    End Sub
    Partial Private Sub OnDownloaded_ByChanged()
    End Sub
    Partial Private Sub OnNo_SeriesChanging(value As String)
    End Sub
    Partial Private Sub OnNo_SeriesChanged()
    End Sub
    Partial Private Sub OnDateChanging(value As Date)
    End Sub
    Partial Private Sub OnDateChanged()
    End Sub
    Partial Private Sub OnFundChanging(value As String)
    End Sub
    Partial Private Sub OnFundChanged()
    End Sub
    Partial Private Sub OnSourceChanging(value As String)
    End Sub
    Partial Private Sub OnSourceChanged()
    End Sub
    Partial Private Sub OnSub_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnSub_TypeChanged()
    End Sub
    Partial Private Sub OnCP_Header_NoChanging(value As String)
    End Sub
    Partial Private Sub OnCP_Header_NoChanged()
    End Sub
    Partial Private Sub OnReconciliation_DBChanging(value As Integer)
    End Sub
    Partial Private Sub OnReconciliation_DBChanged()
    End Sub
    Partial Private Sub OnValue_DateChanging(value As Date)
    End Sub
    Partial Private Sub OnValue_DateChanged()
    End Sub
    Partial Private Sub OnSchedule_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSchedule_IDChanged()
    End Sub
    Partial Private Sub OnContribution_TypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnContribution_TypeChanged()
    End Sub
    Partial Private Sub OnFund_TypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnFund_TypeChanged()
    End Sub
    Partial Private Sub OnSelectChanging(value As Byte)
    End Sub
    Partial Private Sub OnSelectChanged()
    End Sub
    Partial Private Sub OnSelected_byChanging(value As String)
    End Sub
    Partial Private Sub OnSelected_byChanged()
    End Sub
    Partial Private Sub OnSchedule_Monitor_NoChanging(value As String)
    End Sub
    Partial Private Sub OnSchedule_Monitor_NoChanged()
    End Sub
    Partial Private Sub OnArchiveChanging(value As Byte)
    End Sub
    Partial Private Sub OnArchiveChanged()
    End Sub
    Partial Private Sub OnDatetime_ArchiveChanging(value As Date)
    End Sub
    Partial Private Sub OnDatetime_ArchiveChanged()
    End Sub
    Partial Private Sub OnArchived_byChanging(value As String)
    End Sub
    Partial Private Sub OnArchived_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_timestamp", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property timestamp() As System.Data.Linq.Binary
		Get
			Return Me._timestamp
		End Get
		Set
			If (Object.Equals(Me._timestamp, value) = false) Then
				Me.OntimestampChanging(value)
				Me.SendPropertyChanging
				Me._timestamp = value
				Me.SendPropertyChanged("timestamp")
				Me.OntimestampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property No() As String
		Get
			Return Me._No
		End Get
		Set
			If (String.Equals(Me._No, value) = false) Then
				Me.OnNoChanging(value)
				Me.SendPropertyChanging
				Me._No = value
				Me.SendPropertyChanged("No")
				Me.OnNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employer Code]", Storage:="_Employer_Code", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employer_Code() As String
		Get
			Return Me._Employer_Code
		End Get
		Set
			If (String.Equals(Me._Employer_Code, value) = false) Then
				Me.OnEmployer_CodeChanging(value)
				Me.SendPropertyChanging
				Me._Employer_Code = value
				Me.SendPropertyChanged("Employer_Code")
				Me.OnEmployer_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Employer Name]", Storage:="_Employer_Name", DbType:="NVarChar(150) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Employer_Name() As String
		Get
			Return Me._Employer_Name
		End Get
		Set
			If (String.Equals(Me._Employer_Name, value) = false) Then
				Me.OnEmployer_NameChanging(value)
				Me.SendPropertyChanging
				Me._Employer_Name = value
				Me.SendPropertyChanged("Employer_Name")
				Me.OnEmployer_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Contribution Period]", Storage:="_Contribution_Period", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Contribution_Period() As Date
		Get
			Return Me._Contribution_Period
		End Get
		Set
			If ((Me._Contribution_Period = value)  _
						= false) Then
				Me.OnContribution_PeriodChanging(value)
				Me.SendPropertyChanging
				Me._Contribution_Period = value
				Me.SendPropertyChanged("Contribution_Period")
				Me.OnContribution_PeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Period Narration]", Storage:="_Period_Narration", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Period_Narration() As String
		Get
			Return Me._Period_Narration
		End Get
		Set
			If (String.Equals(Me._Period_Narration, value) = false) Then
				Me.OnPeriod_NarrationChanging(value)
				Me.SendPropertyChanging
				Me._Period_Narration = value
				Me.SendPropertyChanged("Period_Narration")
				Me.OnPeriod_NarrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Type of Remittance]", Storage:="_Type_of_Remittance", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Type_of_Remittance() As Integer
		Get
			Return Me._Type_of_Remittance
		End Get
		Set
			If ((Me._Type_of_Remittance = value)  _
						= false) Then
				Me.OnType_of_RemittanceChanging(value)
				Me.SendPropertyChanging
				Me._Type_of_Remittance = value
				Me.SendPropertyChanged("Type_of_Remittance")
				Me.OnType_of_RemittanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[User ID]", Storage:="_User_ID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property User_ID() As String
		Get
			Return Me._User_ID
		End Get
		Set
			If (String.Equals(Me._User_ID, value) = false) Then
				Me.OnUser_IDChanging(value)
				Me.SendPropertyChanging
				Me._User_ID = value
				Me.SendPropertyChanged("User_ID")
				Me.OnUser_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Schedule Downloaded]", Storage:="_Schedule_Downloaded", DbType:="TinyInt NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Schedule_Downloaded() As Byte
		Get
			Return Me._Schedule_Downloaded
		End Get
		Set
			If ((Me._Schedule_Downloaded = value)  _
						= false) Then
				Me.OnSchedule_DownloadedChanging(value)
				Me.SendPropertyChanging
				Me._Schedule_Downloaded = value
				Me.SendPropertyChanged("Schedule_Downloaded")
				Me.OnSchedule_DownloadedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Downloaded By]", Storage:="_Downloaded_By", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Downloaded_By() As String
		Get
			Return Me._Downloaded_By
		End Get
		Set
			If (String.Equals(Me._Downloaded_By, value) = false) Then
				Me.OnDownloaded_ByChanging(value)
				Me.SendPropertyChanging
				Me._Downloaded_By = value
				Me.SendPropertyChanged("Downloaded_By")
				Me.OnDownloaded_ByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[No Series]", Storage:="_No_Series", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property No_Series() As String
		Get
			Return Me._No_Series
		End Get
		Set
			If (String.Equals(Me._No_Series, value) = false) Then
				Me.OnNo_SeriesChanging(value)
				Me.SendPropertyChanging
				Me._No_Series = value
				Me.SendPropertyChanged("No_Series")
				Me.OnNo_SeriesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property [Date]() As Date
		Get
			Return Me._Date
		End Get
		Set
			If ((Me._Date = value)  _
						= false) Then
				Me.OnDateChanging(value)
				Me.SendPropertyChanging
				Me._Date = value
				Me.SendPropertyChanged("[Date]")
				Me.OnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fund", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Fund() As String
		Get
			Return Me._Fund
		End Get
		Set
			If (String.Equals(Me._Fund, value) = false) Then
				Me.OnFundChanging(value)
				Me.SendPropertyChanging
				Me._Fund = value
				Me.SendPropertyChanged("Fund")
				Me.OnFundChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Source() As String
		Get
			Return Me._Source
		End Get
		Set
			If (String.Equals(Me._Source, value) = false) Then
				Me.OnSourceChanging(value)
				Me.SendPropertyChanging
				Me._Source = value
				Me.SendPropertyChanged("Source")
				Me.OnSourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Sub Type]", Storage:="_Sub_Type", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Sub_Type() As String
		Get
			Return Me._Sub_Type
		End Get
		Set
			If (String.Equals(Me._Sub_Type, value) = false) Then
				Me.OnSub_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Sub_Type = value
				Me.SendPropertyChanged("Sub_Type")
				Me.OnSub_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[CP Header No]", Storage:="_CP_Header_No", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CP_Header_No() As String
		Get
			Return Me._CP_Header_No
		End Get
		Set
			If (String.Equals(Me._CP_Header_No, value) = false) Then
				Me.OnCP_Header_NoChanging(value)
				Me.SendPropertyChanging
				Me._CP_Header_No = value
				Me.SendPropertyChanged("CP_Header_No")
				Me.OnCP_Header_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Reconciliation DB]", Storage:="_Reconciliation_DB", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Reconciliation_DB() As Integer
		Get
			Return Me._Reconciliation_DB
		End Get
		Set
			If ((Me._Reconciliation_DB = value)  _
						= false) Then
				Me.OnReconciliation_DBChanging(value)
				Me.SendPropertyChanging
				Me._Reconciliation_DB = value
				Me.SendPropertyChanged("Reconciliation_DB")
				Me.OnReconciliation_DBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Value Date]", Storage:="_Value_Date", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Value_Date() As Date
		Get
			Return Me._Value_Date
		End Get
		Set
			If ((Me._Value_Date = value)  _
						= false) Then
				Me.OnValue_DateChanging(value)
				Me.SendPropertyChanging
				Me._Value_Date = value
				Me.SendPropertyChanged("Value_Date")
				Me.OnValue_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Schedule ID]", Storage:="_Schedule_ID", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Schedule_ID() As String
		Get
			Return Me._Schedule_ID
		End Get
		Set
			If (String.Equals(Me._Schedule_ID, value) = false) Then
				Me.OnSchedule_IDChanging(value)
				Me.SendPropertyChanging
				Me._Schedule_ID = value
				Me.SendPropertyChanged("Schedule_ID")
				Me.OnSchedule_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Contribution Type]", Storage:="_Contribution_Type", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Contribution_Type() As Integer
		Get
			Return Me._Contribution_Type
		End Get
		Set
			If ((Me._Contribution_Type = value)  _
						= false) Then
				Me.OnContribution_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Contribution_Type = value
				Me.SendPropertyChanged("Contribution_Type")
				Me.OnContribution_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Fund Type]", Storage:="_Fund_Type", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Fund_Type() As Integer
		Get
			Return Me._Fund_Type
		End Get
		Set
			If ((Me._Fund_Type = value)  _
						= false) Then
				Me.OnFund_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Fund_Type = value
				Me.SendPropertyChanged("Fund_Type")
				Me.OnFund_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Select", DbType:="TinyInt NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property [Select]() As Byte
		Get
			Return Me._Select
		End Get
		Set
			If ((Me._Select = value)  _
						= false) Then
				Me.OnSelectChanging(value)
				Me.SendPropertyChanging
				Me._Select = value
				Me.SendPropertyChanged("[Select]")
				Me.OnSelectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Selected by]", Storage:="_Selected_by", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Selected_by() As String
		Get
			Return Me._Selected_by
		End Get
		Set
			If (String.Equals(Me._Selected_by, value) = false) Then
				Me.OnSelected_byChanging(value)
				Me.SendPropertyChanging
				Me._Selected_by = value
				Me.SendPropertyChanged("Selected_by")
				Me.OnSelected_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Schedule Monitor No]", Storage:="_Schedule_Monitor_No", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Schedule_Monitor_No() As String
		Get
			Return Me._Schedule_Monitor_No
		End Get
		Set
			If (String.Equals(Me._Schedule_Monitor_No, value) = false) Then
				Me.OnSchedule_Monitor_NoChanging(value)
				Me.SendPropertyChanging
				Me._Schedule_Monitor_No = value
				Me.SendPropertyChanged("Schedule_Monitor_No")
				Me.OnSchedule_Monitor_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Archive", DbType:="TinyInt NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Archive() As Byte
		Get
			Return Me._Archive
		End Get
		Set
			If ((Me._Archive = value)  _
						= false) Then
				Me.OnArchiveChanging(value)
				Me.SendPropertyChanging
				Me._Archive = value
				Me.SendPropertyChanged("Archive")
				Me.OnArchiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Datetime Archive]", Storage:="_Datetime_Archive", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Datetime_Archive() As Date
		Get
			Return Me._Datetime_Archive
		End Get
		Set
			If ((Me._Datetime_Archive = value)  _
						= false) Then
				Me.OnDatetime_ArchiveChanging(value)
				Me.SendPropertyChanging
				Me._Datetime_Archive = value
				Me.SendPropertyChanged("Datetime_Archive")
				Me.OnDatetime_ArchiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Archived by]", Storage:="_Archived_by", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Archived_by() As String
		Get
			Return Me._Archived_by
		End Get
		Set
			If (String.Equals(Me._Archived_by, value) = false) Then
				Me.OnArchived_byChanging(value)
				Me.SendPropertyChanging
				Me._Archived_by = value
				Me.SendPropertyChanged("Archived_by")
				Me.OnArchived_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
